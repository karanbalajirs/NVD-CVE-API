# decorators.py
from functools import wraps
from django.http import QueryDict
from django.contrib.auth.decorators import login_required
from django.http import HttpResponseForbidden

def admin_required(func):
  @wraps(func)
  def decorated_view(request, *args, **kwargs):
    if not request.user.is_staff:
      # Redirect to login or display unauthorized message
      return HttpResponseForbidden("Forbidden")
    return func(request, *args, **kwargs)
  return decorated_view

# To wrap the request.POST
def params(homec):
    @wraps(homec)
    def wrapper(request, *args, **kwargs):
            page =request.POST.get('page',1)
            limit = request.POST.get('limit',10)
            lim = request.POST.get('lim')
            sort = request.POST.get('sort',0)
            year = request.POST.get('year1','0')
            rej = request.POST.get('rej','False')
            cvid = request.POST.get('cvid1','')
            lst = request.POST.get('lst',0)
            request.lst = lst
            request.lim = lim
            request.page = page
            request.limit = limit
            request.sort = sort
            request.year = year
            request.rej = rej
            request.cvid = cvid
            return homec(request, *args, **kwargs)
    return wrapper
