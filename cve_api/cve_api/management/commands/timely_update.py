from django.core.management.base import BaseCommand
import time
import requests
from cve_api.models import CVE,count
import pymongo
from datetime import datetime

client = pymongo.MongoClient("mongodb://localhost:27017/")  
database = client["djongo_test"]  
collection = database["cve_api_cve"]
col1 = database["cve_api_count"]

class Command(BaseCommand):
    help = 'Update database from API periodically'

    def handle(self, *args, **options):
        while True:
            try:
                self.fetch_data_from_api_and_update_database()
            except Exception as e:
                self.stdout.write(self.style.ERROR(f"Error: {e}"))
            time.sleep(3600)  # Sleep for 15 minutes (900 seconds)

    def fetch_data_from_api_and_update_database(self):
        # Fetch data from the API
        count1 = col1.find_one(sort=[("_id",pymongo.DESCENDING)])
        date = count1['lastupdated']
        current_datetime = datetime.now()
        print(date)
        time.sleep(5)
        try:
            #find changes in the API
            url = "https://services.nvd.nist.gov/rest/json/cvehistory/2.0?changeStartDate={}&changeEndDate={}".format(date.isoformat(),current_datetime.isoformat())
            response = requests.get(url)
            data = response.json()
            #Iterate through changes
            for i in data['cveChanges']:
                s = i['change']
                if(s['eventName'] == 'CVE Received' or s['eventName'] =='CVE Modified'):
                    time.sleep(5)
                    print(s['cveId'])
                    a = s['cveId']
                    try :
                        #get the changed CVE data
                        url2 = f"https://services.nvd.nist.gov/rest/json/cves/2.0?cveId={a}"
                        response = requests.get(url2)
                        new = response.json()
                        #print(new)
                        #add the changed CVE to the table
                        for j in new['vulnerabilities']:
                            
                                cv = j['cve']
                                print(cv['id'])
                                cve = CVE(
                                                id=cv['id'],
                                                sourceIdentifier=cv['sourceIdentifier'],
                                                published=cv['published'],
                                                lastModified=cv['lastModified'],
                                                vulnStatus= cv['vulnStatus']
                                )
                                            
                                            # Add description
                                cve.description =  cv['descriptions']#[{'lang':'en','value':'Descritptions '}]
                                if('weaknesses' in cv):
                                    cve.weaknesses = cv['weaknesses']
                                if('cvssMetricV2' in cv['metrics']):
                                    cve.metrics2 = cv['metrics']
                                if('cvssMetricV31' in cv['metrics']):
                                    cve.metrics31 = cv['metrics']
                                if('cvssMetricV30' in cv['metrics']):
                                    cve.metrics30 = cv['metrics']
                                if('configurations' in cv):
                                    cve.configurations = cv['configurations']
                                if('references' in cv):
                                    cve.references = cv['references']
                                #Save the table
                                cve.save()

                    except Exception as e:
                                            print(e)
                                            time.sleep(5)
                                            raise Exception("Problem")                      
            k=0
            while(k != 3):
                try:
                        co = count()
                        co.count = CVE.objects.count()
                        co.lastupdated = datetime.now()
                        co.save()
                        print("Updated")
                        break;
                except Exception as e:
                                k+=1
                                print(e);                            
                    
        except  Exception as e:
              print(e)
              time.sleep(5)                